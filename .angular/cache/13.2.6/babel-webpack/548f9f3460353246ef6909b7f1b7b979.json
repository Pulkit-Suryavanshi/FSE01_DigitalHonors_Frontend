{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../tweet.service\";\nimport * as i2 from \"../reply/reply.service\";\nimport * as i3 from \"src/app/login.service\";\nimport * as i4 from \"@angular/forms\";\nexport let ReplyFormComponent = /*#__PURE__*/(() => {\n  class ReplyFormComponent {\n    constructor(tweetService, replyService, loginService) {\n      this.tweetService = tweetService;\n      this.replyService = replyService;\n      this.loginService = loginService;\n      this.tweetId = '';\n      this.repliedBy = '';\n      this.replyAdded = new EventEmitter();\n    }\n\n    ngOnInit() {\n      var _a;\n\n      this.repliedBy = (_a = this.loginService.loggedInUser.getValue()) === null || _a === void 0 ? void 0 : _a['username'];\n    }\n\n    replyToTweet(formData) {\n      this.tweetService.replyToTweet(formData.value).subscribe(response => {\n        if (!(response === null || response === void 0 ? void 0 : response['error'])) {\n          this.replyService.addReply(formData.value);\n          this.replyAdded.emit(true);\n        }\n      });\n    }\n\n  }\n\n  ReplyFormComponent.ɵfac = function ReplyFormComponent_Factory(t) {\n    return new (t || ReplyFormComponent)(i0.ɵɵdirectiveInject(i1.TweetService), i0.ɵɵdirectiveInject(i2.ReplyService), i0.ɵɵdirectiveInject(i3.LoginService));\n  };\n\n  ReplyFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReplyFormComponent,\n    selectors: [[\"reply-form\"]],\n    inputs: {\n      tweetId: \"tweetId\",\n      repliedBy: \"repliedBy\"\n    },\n    outputs: {\n      replyAdded: \"replyAdded\"\n    },\n    decls: 7,\n    vars: 3,\n    consts: [[1, \"reply-form\", 3, \"ngSubmit\"], [\"replyForm\", \"ngForm\"], [\"name\", \"content\", \"id\", \"content\", \"placeholder\", \"Reply to this tweet...\", \"ngModel\", \"\", \"required\", \"\", 1, \"content\", \"form-control\"], [\"type\", \"hidden\", \"name\", \"repliedBy\", 3, \"ngModel\"], [\"type\", \"hidden\", \"name\", \"tweetId\", 3, \"ngModel\"], [1, \"btn\", \"btn-primary\", \"text-accent\", \"submit\", 3, \"disabled\"]],\n    template: function ReplyFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function ReplyFormComponent_Template_form_ngSubmit_0_listener() {\n          i0.ɵɵrestoreView(_r1);\n\n          const _r0 = i0.ɵɵreference(1);\n\n          return ctx.replyToTweet(_r0);\n        });\n        i0.ɵɵelement(2, \"textarea\", 2)(3, \"input\", 3)(4, \"input\", 4);\n        i0.ɵɵelementStart(5, \"button\", 5);\n        i0.ɵɵtext(6, \"Reply\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.repliedBy);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.tweetId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !_r0.valid);\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i4.RequiredValidator],\n    styles: [\".reply-form[_ngcontent-%COMP%]{display:grid;grid-template-columns:4fr 1fr;margin:1rem}.content[_ngcontent-%COMP%]{grid-column:1 / 2;resize:none;height:3rem;border-radius:.3rem;padding:.4rem}.submit[_ngcontent-%COMP%]{grid-column:2 / 3;justify-self:center;height:max-content}\"]\n  });\n  return ReplyFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}